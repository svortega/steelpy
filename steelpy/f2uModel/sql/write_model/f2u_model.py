#
# Copyright (c) 2009-2020 fem2ufo
#

# Python stdlib imports
import datetime
import os
#
#
# package imports
from steelpy.f2uModel.sql.operation.process_sql import create_table


_table_header = "CREATE TABLE IF NOT EXISTS tb_Header(\
                    module TEXT PRIMARY KEY NOT NULL,\
                    version TEXT NOT NULL,\
                    repository TEXT NOT NULL,\
                    support TEXT NOT NULL, \
                    comment TEXT);"

_table_model_rules = "CREATE TABLE IF NOT EXISTS tb_Rules(\
                      number INTEGER PRIMARY KEY NOT NULL,\
                      units_length TEXT NOT NULL,\
                      units_mass TEXT NOT NULL,\
                      units_time TEXT NOT NULL,\
                      units_temperature TEXT NOT NULL,\
                      units_force TEXT NOT NULL,\
                      units_stress TEXT NOT NULL,\
                      units_pressure TEXT NOT NULL,\
                      units_angle TEXT NOT NULL,\
                      units_frequency TEXT NOT NULL,\
                      units_energy TEXT NOT NULL,\
                      units_power TEXT NOT NULL,\
                      units_current TEXT NOT NULL,\
                      tolerance_angle DECIMAL NOT NULL,\
                      tolerance_point DECIMAL NOT NULL);"

_table_component = "CREATE TABLE IF NOT EXISTS tb_Component(\
                    name TEXT PRIMARY KEY NOT NULL,\
                    substructure INTEGER NOT NULL,\
                    asset TEXT, location TEXT,\
                    user TEXT, \
                    date DATETIME DEFAULT CURRENT_DATE,\
                    comment TEXT);"
#
#
def populate_header_table(conn):
    """
    """
    project = ("fem2ufo", "5.0dev",
               "https://github.com/svortega/steelpy",
               "svortega@gmail.com",
               "Python Powered (http://www.python.org/)")

    sql = 'INSERT INTO tb_Header(module,\
                       version, repository,\
                       support, comment)\
                       VALUES(?, ?,?, ?,?)'
    cur = conn.cursor ()
    cur.execute(sql, project)
#
def populate_rules_table(conn): #rules
    """
    """
    project = ("metre", "kilogram", "second", "kelvin",
                "newton", "pascal", "pascal", "radian",
                "hertz", "joule", "watt", "ampere",
                0.03490659, 0.010)
                #rules.tol_angle, rules.tol_apoint)

    sql = 'INSERT INTO tb_Rules(units_length, units_mass, units_time, units_temperature,\
                                units_force, units_stress, units_pressure, units_angle,\
                                units_frequency, units_energy, units_power, units_current,\
                                tolerance_angle, tolerance_point)\
                       VALUES(?,?,?,?, ?,?,?,?, ?,?,?,?, ?,?)'
    cur = conn.cursor()
    cur.execute(sql, project)
#
def populate_component_table(conn, component,
                             comment=None):
    """
    """
    if not comment:
        comment = "File Generated by fem2ufo"
    sub = 1
    user = os.getlogin()
    today = datetime.date.today()
    project = (component, sub, "NULL", "NULL",
               user, today, comment)

    sql = 'INSERT INTO tb_Component(name, substructure, asset,\
                       location, user, date, comment)\
                       VALUES(?, ?,?, ?,?, ?,?)'
    cur = conn.cursor()
    cur.execute(sql, project)
#
#
#
def populate_component(conn, component):
    """
    """
    create_table(conn, _table_header)
    populate_header_table(conn)
    #
    create_table(conn, _table_model_rules)
    populate_rules_table(conn)
    #
    create_table(conn, _table_component)
    populate_component_table(conn, component)
    conn.commit()